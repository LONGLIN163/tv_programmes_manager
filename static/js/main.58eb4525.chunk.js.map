{"version":3,"sources":["store.js","components/ProgramContextProvider.js","components/Programmes/ContentView/ContentView.js","components/Programmes/Preview/Preview.js","components/Programmes/Catalog/Catalog.js","components/Programmes/PlayList/Playlist.js","components/Programmes/Form/Form.js","components/Programmes/DialogPane/DialogPane.js","components/Layouts/Header/Header.js","components/Layouts/Footer/Footer.js","components/App.js","index.js"],"names":["types","programmes","id","title","synopsis","imageUrl","duration","type","episode","chapter","ProgramContext","createContext","useProgramContext","useContext","ProgramContextProvider","children","useState","initProgrammes","setInitProgrammes","programme","setProgram","category","setCategory","editMode","setEditMode","openDialog","setOpenDialog","programTypes","programmesByType","setProgrammesByType","programmesInPlayList","setProgrammesInPlayList","DupProgramWarningOpen","setDupProgramWarning","useEffect","initData","reduce","Object","entries","getProgramTypes","contextValue","onItemCreate","pArr","push","temp","concat","onCatSelect","onEditItem","find","item","onEditForm","tempProgramArr","filter","onDeleteItem","tempPrograms","onDeleteItemFromPlayList","onItemSelect","onAddItemToPlayList","map","p","includes","programAdded","programAddedArr","Provider","value","withStyles","theme","paperStyle","padding","overflow","breakpoints","up","marginTop","height","down","container","item2","background","classes","Alert","severity","Grid","className","xs","sm","Preview","isEmpty","keys","length","Typography","variant","style","color","gutterBottom","Card","CardActionArea","CardMedia","component","image","CardContent","onSubmit","Catalog","group","textTransform","List","ListItem","button","onClick","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","Playlist","rows","setRows","haha","width","columns","field","headerName","minWidth","checkboxSelection","hideFooterPagination","onSelectionModelChange","itm","Button","Form","setId","setTitle","setSynopsis","setImageUrl","setDuration","setType","setEpisode","setChapter","currentPrograme","setCurrentPrograme","handleChange","target","name","action","TextField","label","onChange","margin","fullWidth","FormControl","InputLabel","Select","cat","MenuItem","multiline","disabled","DialogPane","handleToggle","Fab","size","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","flex","AppBar","position","Toolbar","Footer","Tabs","findIndex","e","index","indicatorColor","textColor","scrollButtons","Tab","tabsCenter","flexGrow","withWidth","App","CssBaseline","createTheme","palette","main","grey","secondary","amber","light","dark","spacing","unit","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.58eb4525.chunk.js","sourcesContent":["export const types=[\r\n    \"Series\",\"Movies\",\"Cartoons\",\"Shows\",\"Ads\"\r\n]\r\n\r\nexport const programmes=[\r\n\r\n    {\r\n        id:\"10001\",\r\n        title:\"Breaking Bad\",\r\n        synopsis:\"A high school chemistry teacher diagnosed with inoperable lung cancer turns to manufacturing and selling methamphetamine in order to secure his family's future.\",\r\n        imageUrl:\"https://m.media-amazon.com/images/M/MV5BMjhiMzgxZTctNDc1Ni00OTIxLTlhMTYtZTA3ZWFkODRkNmE2XkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_FMjpg_UX1000_.jpg\",\r\n        duration:\"52min\",\r\n        type:\"Series\",\r\n        episode:\"1\",\r\n        chapter:\"6\"\r\n    },\r\n    {\r\n        id:\"10002\",\r\n        title:\"Lost\",\r\n        synopsis:\"The survivors of a plane crash are forced to work together in order to survive on a seemingly deserted tropical island..\",\r\n        imageUrl:\"https://m.media-amazon.com/images/M/MV5BNzhlY2E5NDUtYjJjYy00ODg3LWFkZWQtYTVmMzU4ZWZmOWJkXkEyXkFqcGdeQXVyNTA4NzY1MzY@._V1_FMjpg_UX1000_.jpg\",\r\n        duration:\"52min\",\r\n        type:\"Series\",\r\n        episode:\"2\",\r\n        chapter:\"10\"\r\n    },\r\n    {\r\n        id:\"10003\",\r\n        title:\"Squid Game\",\r\n        synopsis:\"Hundreds of cash-strapped players accept a strange invitation to compete in children's games. Inside, a tempting prize awaits with deadly high stakes. A survival game that has a whopping 45.6 billion-won prize at stake.\",\r\n        imageUrl:\"https://m.media-amazon.com/images/M/MV5BYWE3MDVkN2EtNjQ5MS00ZDQ4LTliNzYtMjc2YWMzMDEwMTA3XkEyXkFqcGdeQXVyMTEzMTI1Mjk3._V1_FMjpg_UX1000_.jpg\",\r\n        duration:\"49min\",\r\n        type:\"Series\",\r\n        episode:\"1\",\r\n        chapter:\"5\"\r\n    },\r\n    {\r\n        id:\"20001\",\r\n        title:\"Life of Pi\",\r\n        synopsis:\"A young man who survives a disaster at sea is hurtled into an epic journey of adventure and discovery. While cast away, he forms an unexpected connection with another survivor: a fearsome Bengal tiger.\",\r\n        imageUrl:\"https://m.media-amazon.com/images/M/MV5BNTg2OTY2ODg5OF5BMl5BanBnXkFtZTcwODM5MTYxOA@@._V1_FMjpg_UX1000_.jpg\",\r\n        duration:\"180min\",\r\n        type:\"Movies\",\r\n        episode:\"\",\r\n        chapter:\"1\"\r\n    },\r\n    {\r\n        id:\"20002\",\r\n        title:\"The Invisible Guest\",\r\n        synopsis:\"A successful entrepreneur accused of murder and a witness preparation expert have less than three hours to come up with an impregnable defense.\",\r\n        imageUrl:\"https://m.media-amazon.com/images/M/MV5BMDk0YzAwYjktMWFiZi00Y2FmLWJmMmMtMzUyZDZmMmU5MjkzXkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_FMjpg_UX1000_.jpg\",\r\n        duration:\"120min\",\r\n        type:\"Movies\",\r\n        episode:\"\",\r\n        chapter:\"1\"\r\n    },\r\n    {\r\n        id:\"30001\",\r\n        title:\"The Simpsons\",\r\n        synopsis:\"The satiric adventures of a working-class family in the misfit city of Springfield.\",\r\n        imageUrl:\"https://m.media-amazon.com/images/M/MV5BYjFkMTlkYWUtZWFhNy00M2FmLThiOTYtYTRiYjVlZWYxNmJkXkEyXkFqcGdeQXVyNTAyODkwOQ@@._V1_.jpg\",\r\n        duration:\"20min\",\r\n        type:\"Cartoons\",\r\n        episode:\"10\",\r\n        chapter:\"13\"\r\n    },\r\n    {\r\n        id:\"30002\",\r\n        title:\"The Croods\",\r\n        synopsis:\"After their cave is destroyed, a caveman family must trek through an unfamiliar fantastical world with the help of an inventive boy.\",\r\n        imageUrl:\"https://m.media-amazon.com/images/M/MV5BMTcyOTc2OTA1Ml5BMl5BanBnXkFtZTcwOTI1MjkzOQ@@._V1_FMjpg_UX1000_.jpg\",\r\n        duration:\"120min\",\r\n        type:\"Cartoons\",\r\n        episode:\"3\",\r\n        chapter:\"1\"\r\n    },\r\n    {\r\n        id:\"40001\",\r\n        title:\"Supervivientes 2021\",\r\n        synopsis:\"Supervivientes 2021 todavía no ha lanzado ese esperado «bombazo» que Lara Álvarez prometía que saldría a la luz a pocos días de su inicio, pero ya ha anunciado la primera gran novedad de su próxima edición.\",\r\n        imageUrl:\"https://www.elindependiente.com/wp-content/uploads/2021/04/Logo-Supervivientes_2327177263_15453451_660x372-656x368.jpg\",\r\n        duration:\"120min\",\r\n        type:\"Shows\",\r\n        episode:\"4\",\r\n        chapter:\"5\"\r\n    },\r\n    {\r\n        id:\"40002\",\r\n        title:\"Wild Frank\",\r\n        synopsis:\"Who is Frank Cuesta? What does he do? How can he be so comfortable dealing with wild animals? Watch everything you want to know about...\",\r\n        imageUrl:\"https://pbs.twimg.com/media/DsSbVSkWsAAzS1L.jpg\",\r\n        duration:\"40min\",\r\n        type:\"Shows\",\r\n        episode:\"4\",\r\n        chapter:\"2\"\r\n    },\r\n    {\r\n        id:\"50001\",\r\n        title:\"Mercadona: Algo más que palabras\",\r\n        synopsis:\"El “Jefe”, SPB, calidad total, innovación, interproveedor, producto recomendado, reputación, ética, carro menú o...\",\r\n        imageUrl:\"http://javierpanzano.com/wp-content/uploads/2009/09/mercadona-blog.jpg\",\r\n        duration:\"0.5min\",\r\n        type:\"Ads\",\r\n        episode:\"\",\r\n        chapter:\"1\"\r\n    },\r\n    {\r\n        id:\"50002\",\r\n        title:\"Taco rico\",\r\n        synopsis:\"Comida rápida restaurante redes sociales publicidad marco frontera fondo menú lista aperitivo comida plantilla diseño creativo acuarela vector ilustración diseño...\",\r\n        imageUrl:\"https://cookieandkate.com/images/2020/04/black-bean-tacos-recipe-2.jpg\",\r\n        duration:\"0.5min\",\r\n        type:\"Ads\",\r\n        episode:\"\",\r\n        chapter:\"1\"\r\n    }\r\n]","\r\nimport React, { useEffect,useState,createContext,useContext} from 'react';\r\nimport {types,programmes } from '../store';\r\n\r\nexport const ProgramContext = createContext({})\r\nexport const useProgramContext = () => useContext(ProgramContext);\r\n\r\nexport const ProgramContextProvider = ({children}) => {\r\n\r\n    const [initProgrammes,setInitProgrammes]=useState(programmes);\r\n    const [programme,setProgram]=useState({});\r\n    const [category,setCategory]=useState('');\r\n    const [editMode,setEditMode]=useState(false);\r\n    const [openDialog,setOpenDialog]=useState(false);\r\n    const [programTypes,setProgramTypes]=useState(types);\r\n    const [programmesByType,setProgrammesByType]=useState([]);\r\n    const [programmesInPlayList,setProgrammesInPlayList]=useState([]);\r\n    const [DupProgramWarningOpen,setDupProgramWarning]=useState(false);\r\n\r\n\r\n    const getProgramTypes=()=>{\r\n        const initData=programTypes.reduce((initProgrammes, category) => ({\r\n          ...initProgrammes,\r\n          [category]:[]\r\n        }),{})\r\n        return Object.entries( \r\n          initProgrammes.reduce((initProgrammes,programme) => {\r\n            const {type}=programme\r\n            initProgrammes[type] = [...initProgrammes[type],programme]\r\n            return initProgrammes;\r\n          },initData)\r\n        )\r\n      }\r\n  \r\n      useEffect(() => {\r\n        setProgrammesByType(getProgramTypes())\r\n      },[initProgrammes])\r\n     \r\n      const onCatSelect=(category)=>{\r\n          setCategory(category)\r\n      }\r\n     \r\n       const onItemSelect=(id)=>{\r\n         setProgram(initProgrammes.find(item => item.id===id))\r\n         setEditMode(false)\r\n       }\r\n     \r\n       const onItemCreate = (programme) => {\r\n         const pArr=[]\r\n         pArr.push(programme)\r\n         const temp=initProgrammes.concat(pArr)\r\n         setInitProgrammes(temp)\r\n         \r\n       }\r\n  \r\n       const onDeleteItem = (id) => {\r\n         const tempPrograms=initProgrammes.filter(item => item.id!==id);\r\n         setInitProgrammes(tempPrograms)\r\n         setEditMode(programme.id===id ? false : editMode)\r\n         setProgram(programme.id===id ? {} : programme)\r\n       }\r\n  \r\n       const onDeleteItemFromPlayList = (id) => {\r\n         const tempPrograms=programmesInPlayList.filter(item => item.id!==id);\r\n         setProgrammesInPlayList(tempPrograms)\r\n         setEditMode(programme.id===id ? false : editMode)\r\n         setProgram(programme.id===id ? {} : programme)\r\n       }\r\n     \r\n       const onEditItem = (id) => {\r\n         setProgram(initProgrammes.find(item => item.id===id))\r\n         setEditMode(true)\r\n       }\r\n     \r\n       const onEditForm = (programme) => {\r\n         const tempProgramArr=initProgrammes.filter(item => item.id!==programme.id);\r\n         tempProgramArr.push(programme)\r\n  \r\n         setInitProgrammes(tempProgramArr)\r\n         setProgram(programme)\r\n         setEditMode(false)\r\n       }\r\n  \r\n       const onAddItemToPlayList = (id) => {\r\n  \r\n          const prePlayListIdArr=programmesInPlayList.map(p => p.id);\r\n  \r\n          if(prePlayListIdArr.includes(id)){\r\n            setDupProgramWarning(true)\r\n            return\r\n          }\r\n  \r\n          const programAdded=initProgrammes.find(item => item.id===id)\r\n          const programAddedArr=[]\r\n          programAddedArr.push(programAdded)\r\n          const temp=programmesInPlayList.concat(programAddedArr)\r\n          setProgrammesInPlayList(temp)\r\n          setDupProgramWarning(false)\r\n      }\r\n      \r\n      const contextValue={\r\n          initProgrammes,\r\n          programme,\r\n          setProgram,\r\n          category,\r\n          editMode,\r\n          setEditMode,\r\n          openDialog,\r\n          setOpenDialog,\r\n          programTypes,\r\n          programmesByType,\r\n          programmesInPlayList,\r\n          onItemCreate,\r\n          onCatSelect,\r\n          onEditItem,\r\n          onEditForm,\r\n          onDeleteItem,\r\n          onDeleteItemFromPlayList,\r\n          onItemSelect,\r\n          onAddItemToPlayList,\r\n          DupProgramWarningOpen,\r\n      }\r\n\r\n    return ( \r\n        <ProgramContext.Provider value={contextValue}>\r\n            {children}\r\n        </ProgramContext.Provider>\r\n     );\r\n}\r\n","import React from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport {Catalog,Preview,Playlist} from '..'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { useProgramContext } from '../../ProgramContextProvider';\r\n\r\n\r\nconst styles=theme=>({\r\n    paperStyle:{\r\n        padding:20 , \r\n        overflow:'auto',\r\n        [theme.breakpoints.up('sm')]:{\r\n            marginTop:5,\r\n            height:'calc(100%-10px)'\r\n        },\r\n        [theme.breakpoints.down('xs')]:{\r\n            height:'100%'\r\n        },\r\n        borderReft:\"1px solid white !important\",\r\n        backgroundColor: '#hexcodehere'\r\n    },\r\n    '@global':{\r\n        'html, body, #root':{\r\n            height: '100%'\r\n        },\r\n    },\r\n    container:{\r\n        [theme.breakpoints.up('sm')]:{\r\n            height: 'calc(100% - 64px - 48px)',\r\n            overflow:'auto',\r\n        },\r\n        [theme.breakpoints.down('xs')]:{\r\n            height: 'calc(100% - 56px - 48px)'\r\n        }\r\n    },\r\n    item:{\r\n        [theme.breakpoints.down('xs')]:{\r\n            height: '50%'\r\n        }\r\n    },\r\n    item2:{\r\n        background: '#525252',\r\n    }\r\n})\r\n\r\nconst ContentView = ({classes}) => {\r\n\r\n    const {DupProgramWarningOpen} = useProgramContext()\r\n\r\n    return(\r\n        <>\r\n            { \r\n                DupProgramWarningOpen \r\n                ?<Alert severity=\"error\">You have already add this item to the Playlist!</Alert>\r\n                :null\r\n            }\r\n\r\n            <Grid container className={classes.container}>\r\n                <Grid item xs={12} sm={3} className={classes.item}>\r\n                    <div className={classes.paperStyle}>\r\n                        <Catalog />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}  className={classes.item2}>\r\n                <div className={classes.paperStyle}>\r\n                        <Preview />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} sm={5} className={classes.item}>\r\n                <div className={classes.paperStyle}>\r\n                        <Playlist />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ContentView) ;\r\n    \r\n\r\n \r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {Form} from '..';\r\nimport { useProgramContext } from '../../ProgramContextProvider';\r\n\r\nconst Preview = () => {\r\n    const {\r\n        editMode,\r\n        programme,\r\n        onEditForm\r\n    } = useProgramContext()\r\n\r\n    const isEmpty= Object.keys(programme).length === 0\r\n\r\n    return ( \r\n        <>\r\n            <Typography \r\n                variant={\"h4\" }\r\n                style={{marginTop:20}}\r\n                color=\"secondary\"\r\n                gutterBottom\r\n                title=\"middleView\"\r\n            >\r\n                {\r\n                    editMode\r\n                    ? 'Edit View'\r\n                    : 'Preview'\r\n                }\r\n            </Typography>\r\n\r\n            {\r\n                isEmpty\r\n                ? <div>...</div>\r\n                : <Card>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                        component=\"img\"\r\n                        height=\"400\"\r\n                        image={programme.imageUrl}\r\n                        />\r\n                        <CardContent>\r\n                        <Typography variant=\"h5\" title={programme.title} component=\"h2\">\r\n                            {programme.title}\r\n                        </Typography>\r\n\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {programme.synopsis}\r\n                        </Typography>\r\n\r\n                        <Typography variant=\"subtitle1\" component=\"h2\">\r\n                           Duration:\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {programme.duration}\r\n                        </Typography>\r\n\r\n                        <Typography variant=\"subtitle1\" component=\"h2\">\r\n                           Episode/Chapter:\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {programme.episode} / {programme.chapter}\r\n                        </Typography>\r\n\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n\r\n            }\r\n\r\n\r\n            {\r\n                editMode\r\n                ? <Form \r\n                    onSubmit={onEditForm}\r\n                    programme={programme}\r\n                />\r\n                : <Typography variant={\"subtitle2\" }>\r\n                    {isEmpty ? \"please select an item!\" : '' }\r\n                </Typography>\r\n            }\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Preview;","import React, { Fragment } from 'react';\r\nimport {List,ListItem ,ListItemText,Typography, ListItemSecondaryAction, IconButton} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useProgramContext } from '../../ProgramContextProvider';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\n\r\nconst Catalog = () => {\r\n\r\n    const {\r\n        programmesByType,\r\n        category,\r\n        onItemSelect,\r\n        onDeleteItem,\r\n        onEditItem,\r\n        onAddItemToPlayList\r\n    } = useProgramContext()\r\n\r\n    return ( \r\n        <>\r\n            <Typography \r\n                variant={\"h4\" }\r\n                style={{marginTop:20}}\r\n                color=\"secondary\"\r\n                gutterBottom\r\n                title=\"Media Resources\"\r\n            >\r\n                Media Resources\r\n            </Typography>\r\n           \r\n            {\r\n            programmesByType.map(([group,programmesByType]) => {\r\n                return(\r\n                    !category || category===group\r\n                    ?<Fragment key={group}>\r\n                        <Typography \r\n                          variant=\"h6\" \r\n                          color=\"secondary\"\r\n                          style={{textTransform:'capitalize'}}\r\n                          title={group}\r\n                        >\r\n                           {group}\r\n                        </Typography>\r\n\r\n                        <List component=\"nav\" >\r\n                            {\r\n                                programmesByType.map( ({id,title}) => {\r\n                                    return (\r\n                                        <ListItem \r\n                                        button \r\n                                        key={id}\r\n                                        title={title}\r\n                                        onClick={ () => onItemSelect(id)}\r\n                                    >\r\n                                        <ListItemText \r\n                                            primary={title}\r\n                                        />\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton edge=\"end\" title={title} aria-label=\"comments\" onClick={()=>onEditItem(id)}>\r\n                                                <EditIcon /> \r\n                                            </IconButton> \r\n                                            <IconButton edge=\"end\" title={title+'del'} aria-label=\"comments\" onClick={()=>onDeleteItem(id)}>\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                            <IconButton edge=\"end\" title={title+'add'} aria-label=\"comments\" onClick={()=>onAddItemToPlayList(id)}> \r\n                                                <PlaylistAddIcon />\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                        \r\n                                    </ListItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </List>\r\n                    </Fragment>\r\n                    :null  \r\n                )\r\n            })}\r\n        </>\r\n     )\r\n}\r\n \r\nexport default Catalog;","import React, { Fragment, useEffect,useState } from 'react';\r\nimport {Typography,Button} from '@material-ui/core';\r\nimport { useProgramContext } from '../../ProgramContextProvider';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\nconst Playlist = () => {\r\n\r\n    const {\r\n        programmesInPlayList,\r\n    } = useProgramContext()\r\n    \r\n    \r\n    const [rows, setRows] = useState(programmesInPlayList);\r\n    useEffect(() => {\r\n        setRows(programmesInPlayList)\r\n    },[programmesInPlayList])\r\n    const isEmpty= Object.keys(rows).length === 0 \r\n    \r\n    // *******hard code first(there bugs for updating...)******\r\n    const columns=[\r\n        { field: 'id',headerName:'ID',minWidth: 150}, \r\n        { field: 'title',headerName:'Title',minWidth: 150},\r\n        { field: 'type',headerName:'Type',minWidth: 150},\r\n        { field: 'duration',headerName:'Duration',minWidth: 150},\r\n        { field: 'episode',headerName:'Episode',minWidth: 150},\r\n        { \r\n            field: 'chapter',\r\n            headerName:'Chapter',\r\n            minWidth: 150,\r\n        }\r\n    ]\r\n\r\n      let haha=[]\r\n    \r\n      const handlePurge = () => {\r\n\r\n        setRows(rows.filter(item => { return !haha.includes(item.id); }))\r\n\r\n      };\r\n\r\n  \r\n\r\n    return ( \r\n        <>\r\n            <Typography \r\n                variant={\"h4\" }\r\n                style={{marginTop:20}}\r\n                color=\"secondary\"\r\n                title=\"PlayList\"\r\n                gutterBottom\r\n            >\r\n                PlayList\r\n            </Typography>\r\n            \r\n            <Fragment>\r\n                {\r\n                    !isEmpty\r\n                    ?<>\r\n                        <div style={{ height: 600, width: '100%' }}>\r\n                            <DataGrid\r\n                                columns={columns}\r\n                                rows={rows}\r\n                                checkboxSelection\r\n                                //disableSelectionOnClick\r\n                                hideFooterPagination\r\n                                onSelectionModelChange={itm => haha=itm}\r\n                            />\r\n                        </div>\r\n                        <br />\r\n                        <Button variant=\"contained\" title=\"purgeBtn\" color=\"primary\" onClick={handlePurge}>\r\n                            Purge\r\n                        </Button>\r\n                      </>\r\n                    :null\r\n                }\r\n            </Fragment>\r\n\r\n        </>\r\n     )\r\n}\r\n \r\nexport default Playlist;\r\n\r\n","import React,{useState,useEffect} from 'react';\r\nimport {FormControl,MenuItem,InputLabel,Select,TextField,Button} from '@material-ui/core';\r\nimport { useProgramContext } from '../../ProgramContextProvider';\r\n\r\n\r\nconst Form = ({programme,onSubmit}) => {\r\n\r\n    const [id,setId]=useState('');\r\n    const [title,setTitle]=useState('');\r\n    const [synopsis,setSynopsis]=useState('');\r\n    const [imageUrl,setImageUrl]=useState('');\r\n    const [duration,setDuration]=useState('');\r\n    const [type,setType]=useState('');\r\n    const [episode,setEpisode]=useState('');\r\n    const [chapter,setChapter]=useState('');\r\n\r\n    const {setOpenDialog,programTypes} = useProgramContext()\r\n\r\n    const [currentPrograme,setCurrentPrograme]=useState({});\r\n    \r\n    //console.log(\"onSubmit------\",onSubmit)\r\n    //console.log(\"programme in Form-------\",programme)\r\n\r\n    useEffect(() => {\r\n        if(programme){\r\n            setCurrentPrograme(programme)\r\n            setId(programme.id)\r\n            setTitle(programme.title)\r\n            setSynopsis(programme.synopsis)\r\n            setImageUrl(programme.imageUrl)\r\n            setDuration(programme.duration)\r\n            setType(programme.type)\r\n            setEpisode(programme.episode)\r\n            setChapter(programme.chapter)\r\n        }\r\n    },[programme])\r\n\r\n    const handleChange=({target:{value,name}}) => {\r\n        if(name===\"title\"){\r\n            setTitle(value);\r\n            if(!programme){\r\n                setId(value);\r\n            }\r\n        }\r\n        if(name===\"type\") setType(value);\r\n        if(name===\"synopsis\") setSynopsis(value);\r\n        if(name===\"imageUrl\") setImageUrl(value);\r\n        if(name===\"duration\") setDuration(value);\r\n        if(name===\"episode\") setEpisode(value);\r\n        if(name===\"chapter\") setChapter(value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCurrentPrograme({id,title,type,synopsis,imageUrl,duration,episode,chapter})\r\n    },[title,type,synopsis,imageUrl,duration,episode,chapter])\r\n\r\n    const handleSubmit = () => {\r\n        onSubmit(currentPrograme)\r\n        setCurrentPrograme({\r\n            title:'',\r\n            imageUrl:'',\r\n            type:'',\r\n            synopsis:'',\r\n            duration:'',\r\n            episode:'',\r\n            chapter:''\r\n        })\r\n        setOpenDialog(false)\r\n    }\r\n\r\n    return (<>\r\n                <form action=\"\" title=\"formPane\">\r\n                    <TextField\r\n                        label=\"Title\"\r\n                        value={title}\r\n                        name='title'\r\n                        onChange={handleChange}\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                        label=\"Image\"\r\n                        value={imageUrl}\r\n                        name='imageUrl'\r\n                        onChange={handleChange}\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                        label=\"Duration\"\r\n                        value={duration}\r\n                        name='duration'\r\n                        onChange={handleChange}\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                        label=\"Episode\"\r\n                        value={episode}\r\n                        name='episode'\r\n                        onChange={handleChange}\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                        label=\"Chapter\"\r\n                        value={chapter}\r\n                        name='chapter'\r\n                        onChange={handleChange}\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                    />\r\n                    <br />\r\n                    <FormControl fullWidth>\r\n                        <InputLabel>Types</InputLabel>\r\n                        <Select\r\n                            value={type}\r\n                            name='type'\r\n                            onChange={handleChange}\r\n                        >\r\n                            {\r\n\r\n                                programTypes.map( (cat) => {\r\n                                    return(\r\n                                        <MenuItem key={cat} value={cat}>{cat}</MenuItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </FormControl>\r\n                    <br />\r\n                    <TextField\r\n                        multiline\r\n                        rows=\"4\"\r\n                        label=\"Synopsis\"\r\n                        value={synopsis}\r\n                        name='synopsis'\r\n                        onChange={handleChange}\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                    />\r\n\r\n                    <br />\r\n                    <Button \r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        title=\"formbtn\"\r\n                        onClick={handleSubmit}\r\n                        disabled={!title || !programTypes}\r\n                    >\r\n                        { programme ? 'Done' : 'Create' }\r\n                    </Button>\r\n\r\n                </form>\r\n    </>);\r\n    \r\n}\r\n \r\nexport default Form;","import React from 'react';\r\nimport {Dialog,DialogContent,DialogContentText,DialogTitle,Fab,} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {Form} from '..';\r\nimport { useProgramContext } from '../../ProgramContextProvider';\r\n\r\nconst DialogPane = () => {\r\n    const {openDialog,setOpenDialog,onItemCreate} = useProgramContext()\r\n\r\n    const handleToggle=() => {\r\n        setOpenDialog(!openDialog)\r\n    }\r\n\r\n    const handleFormSubmit= (programme) => {\r\n        handleToggle()\r\n        onItemCreate(programme)\r\n    }\r\n\r\n    return (\r\n            <>\r\n                <Fab \r\n                    color=\"secondary\" \r\n                    aria-label=\"add\" \r\n                    onClick={handleToggle}\r\n                    size=\"small\"\r\n                    title=\"addProgramBtn\"\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n\r\n                <Dialog \r\n                    aria-labelledby=\"form-dialog-title\"\r\n                    open={openDialog ? openDialog : false }\r\n                    onClose={handleToggle}\r\n                    fullWidth\r\n                >\r\n\r\n                    <DialogTitle>\r\n                        Create an item\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            please fill out the form below......\r\n                        </DialogContentText>\r\n                        <Form \r\n                            onSubmit={handleFormSubmit}\r\n                        />\r\n                    </DialogContent>\r\n\r\n                </Dialog>\r\n\r\n            </>\r\n\r\n        );\r\n}\r\n \r\nexport default DialogPane;\r\n\r\n","import React from 'react';\r\nimport {AppBar,Toolbar,Typography} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {DialogPane} from '../../Programmes';\r\n\r\nconst styles={\r\n    flex:{\r\n        flex:1\r\n    }\r\n}\r\n\r\nconst Header = ({classes}) => {\r\n    return ( \r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography variant=\"h5\" color=\"inherit\" className={classes.flex}> \r\n                    VSN Media Kit\r\n                </Typography>\r\n                <DialogPane/>\r\n            </Toolbar>\r\n        </AppBar>\r\n     );\r\n}\r\n \r\nexport default withStyles(styles)(Header);","import React from 'react';\r\nimport {withWidth, AppBar,Tabs,Tab} from '@material-ui/core';\r\n\r\nimport { useProgramContext } from '../../ProgramContextProvider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = {\r\n    tabsCenter: {\r\n      flexGrow: 1,\r\n    }\r\n  };\r\n  \r\n\r\nconst Footer = ({classes}) => {\r\n\r\n    const {programTypes,category,onCatSelect} = useProgramContext()\r\n\r\n    const onIndexSelect = (e,index) => {\r\n        onCatSelect(index===0 ? '': programTypes[index-1])\r\n    }\r\n\r\n    const getIndex=()=>{\r\n        return category ? programTypes.findIndex(item=>item===category)+1:0\r\n    }\r\n\r\n\r\n    return ( \r\n        <AppBar position='static'>\r\n            <Tabs\r\n                value={getIndex()}\r\n                onChange={onIndexSelect}\r\n                indicatorColor=\"secondary\"\r\n                textColor=\"secondary\"\r\n                variant=\"scrollable\"\r\n                scrollButtons=\"auto\"\r\n                title=\"AppBar\"\r\n            >\r\n                <Tab label=\"All\" key={0} className={classes.tabsCenter} title=\"All\"/>\r\n                {\r\n                    programTypes && programTypes.map((item,index) => {\r\n                        return (\r\n                            <Tab label={item} key={index+1} className={classes.tabsCenter} title={item}/>\r\n                        )\r\n                    })\r\n                }\r\n            </Tabs>\r\n        </AppBar>  \r\n    );\r\n    \r\n}\r\n \r\nexport default withStyles(styles)(Footer);withWidth()(Footer);","\r\nimport React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {ProgramContextProvider} from './ProgramContextProvider'\r\nimport {Header,Footer} from './Layouts';\r\nimport {ContentView} from './Programmes'\r\n\r\nconst App = () => {\r\n    return ( \r\n        <ProgramContextProvider>\r\n            <CssBaseline />\r\n            <Header />\r\n            <ContentView />\r\n            <Footer />\r\n        </ProgramContextProvider>\r\n     );\r\n}\r\n \r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport {grey, amber} from '@material-ui/core/colors';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main:grey[900]\n    },\n    secondary: {\n      main:amber[500],\n      light:amber[200],\n      dark:amber[800]\n    },\n    type:'dark',\n    spacing:{\n      unit:10\n    }\n  },\n});\n\n\nReactDOM.render( \n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}